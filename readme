I TAKE NO RESPONSIBILITY FOR ANYTHING THAT YOU DO WITH OR IN RELATION TO THIS CODE.
ANY AND ALL DAMAGES ARE FULLY YOUR FAULT, AND BY USING THIS SOFTWARE YOU AGREE TO
TAKE ALL RESPONSIBILITIES.

SIMPLE INSTRUCTIONS:

        1 - Get the file!
        
        2 - Unzip the file!
        
        3 - Make sure your Pi has an internet connection!
        
        4 - Ensure you have PYTHON 3 INSTALLED! (Default with raspian OS)
        
        5 - Run the following 'python3 install.py'
        
        6 - Follow any instructions as given on screen.
        
        7 - Incase you didn't read the instructions at the end, run the following command 'python3 configCreator.py'
        
        8 - Read all instructions carefully and follow as they say! DO THIS PROPERLY, OTHERWISE YOUR CONFIG FILE WILL NOT WORK. YOU CAN REMOVE A BROKEN CONFIG FILE WITH 'rm config.ini', and then re-run the configCreator.py
        
        9 - Once the config has been generated, your commands are as follows:
                
                python3 RRR.py -c [COMMAND] -r [RIG NUMBER]

                        -c  |   COMMANDS:
                                ON      | START | BOOT
                                OFF     | END   | KILL
                                RESTART | REBOOT| CYCLE

                        -r   |  RIG NUMBER WHICH IS THE SAME NUMBER AS THE RELAYS YOU ASSIGNED EARLIER!
        
        10 - IF YOU NEED ANY HELP, PLEASE CONTACT ME: 'mail@jammyworld.com', OR QUESTION ON MY GITHUB UNDER ISSUES.

---------------------------------------------------
FEATURES UNDER DEVELOPMENT
---------------------------------------------------
Test out the new install script

Add to install script to move across all files to the www dir

get install script to force a first run through of the config creator to move control to the www file.

Create ascii form of pi GPIO pins to show where to connect

Create instructions on how to use the main command from the cmd line

Create a fully working page for a single pi

Create a central software deployment for a main PI ( MAKE IT USEABLE FOR ANY MACHINE THOUGH, SO KEEP PHP BOUND )
CENTRAL PI/LINUX RELEASE AND A WINDOWS RELEASE FOR WAMP ADDON

work on a way of naming a pi, and registering it to one central peice of software

Have named pi's show up and display once added with their individual relays and rigs attatched

Allow naming of each relay in an extension of each config.ini

Have easy deployment of software by mass

Allow expert users to ship the whole process of automated setup, and allow a upload to jamdrive of the config,
then deployment of config to each pi. Allow a test to then be ran to make sure tha all relays on the deployed
pi's match up with the first pi's config that was used to generate the main config. Allow people to take control
of the pins without use of my software
